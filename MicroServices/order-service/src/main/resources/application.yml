server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/cloud_order?useSSL=false
    username: root
    password: root001
    driver-class-name: com.mysql.jdbc.Driver
  #  配置sentinel
  cloud:
    sentinel:
      transport:
        dashboard: localhost:8080
      # push模式联合dashboard一起改
#      datasource:
#        flow:
#          nacos:
#            server-addr: localhost:8848 # nacos地址
#            dataId: orderservice-flow-rules
#            groupId: SENTINEL_GROUP
#            rule-type: flow # 还可以是：degrade、authority、param-flow
mybatis:
  type-aliases-package: pers.ervin.user.pojo
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    pers.ervin: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS
userservice: # 给某个微服务配置负载均衡规则，这里是userservice服务
  ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 负载均衡规则
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule # 同集群由优先的负载均衡规则
ribbon:
  # 饥饿加载
  eager-load:
    enabled: true
    clients: userservice
feign:
  # 优化feign配置连接池
  httpclient:
    enabled: true # 支持HttpClient的开关
    max-connections: 200 # 最大连接数
    max-connections-per-route: 50 # 单个路径的最大连接数
  sentinel:
    enabled: true
#  配置的方式设置feign日志级别
#feign:
#  client:
#    config:
#      default: # 这里用default就是全局配置，如果是写服务名称，则是针对某个微服务的配置
#        loggerLevel: FULL #  日志级别
server:
  port: 9003 #端口
spring:
  application:
    name: service-order #服务名称
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shop?useUnicode=true&characterEncoding=utf8
    username: root
    password: root001
  jpa:
    database: MySQL
    show-sql: true
    open-in-view: true
  zipkin:
    #base-url: http://127.0.0.1:9411/  #server的请求地址
    sender:
      #type: web #数据的传输方式 , 已http的形式向server端发送数据
      type: rabbit #向rabbitmq中发送消息
  sleuth:
    sampler:
      probability: 1 #采样比
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener: # 这里配置了重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
  ###开始配置consul的服务注册
  cloud:
    consul:
      host: 127.0.0.1 #consul服务器的主机地址
      port: 8500 #consul服务器的ip地址
      discovery:
        #是否需要注册
        register: true
        #注册的实例ID (唯一标志)
        instance-id: ${spring.application.name}-1
        #服务的名称
        service-name: ${spring.application.name}
        #服务的请求端口
        port: ${server.port}
        #指定开启ip地址注册
        prefer-ip-address: true
        #当前服务的请求ip
        ip-address: ${spring.cloud.client.ip-address}

#配置feign日志的输出
#日志配置  NONE : 不输出日志(高)   BASIC: 适用于生产环境追踪问题
#HEADERS : 在BASIC的基础上,记录请求和响应头信息   FULL : 记录所有
feign:
  client:
    config:
      service-product: #需要调用的服务名称
        loggerLevel: FULL
  #开启对hystrix的支持
  hystrix:
    enabled: true
management:
  endpoints:
    web:
      exposure:
        include: '*'

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000 #默认的连接超时时间1秒,若1秒没有返回数据,自动的触发降级逻辑
      circuitBreaker:
        enabled: true
        requestVolumeThreshold: 5
        errorThresholdPercentage: 10
        sleepWindowInMilliseconds: 10000


